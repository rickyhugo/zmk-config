/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        qwerty36 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q       &kp W           &kp E        &kp R            &kp T           &kp Y        &kp U        &kp I        &kp O       &kp P          &none
&none  &mt LGUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LSHFT F      &kp G           &kp H        &mt LSHFT J  &mt LCTRL K  &mt LALT L  &mt LGUI SEMI  &none
&none  &kp Z       &kp X           &kp C        &kp V            &kp B           &kp N        &kp M        &kp COMMA    &kp DOT     &kp FSLH       &none
                                   &lt 2 ESC    &lt 3 BACKSPACE  &lt 4 DELETE    &lt 5 ENTER  &lt 1 SPACE  &lt 1 TAB
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        media {
            bindings = <
&none  &bt BT_CLR_ALL  &bt BT_CLR  &none      &none      &none    &none          &none         &none         &none         &none         &none
&none  &kp LGUI        &kp LALT    &kp LCTRL  &kp LSHFT  &none    &kp LA(LC(S))  &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &none
&none  &none           &none       &none      &none      &none    &out OUT_USB   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none
                                   &none      &none      &none    &kp C_STOP     &kp C_PP      &kp C_MUTE
            >;
        };

        nav {
            bindings = <
&none  &none     &none     &none      &none      &none    &kp LC(Z)   &kp LC(X)  &kp LC(C)      &kp LC(V)    &kp LC(Y)  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &caps_word  &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT  &none
&none  &none     &none     &none      &none      &none    &kp INSERT  &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none
                           &none      &none      &none    &none       &none      &none
            >;
        };

        mouse {
            bindings = <
&none  &none     &none     &none      &none      &none    &kp LC(Z)   &kp LC(X)       &kp LC(C)       &kp LC(V)     &kp LC(Y)        &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &caps_word  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none
&none  &none     &none     &none      &none      &none    &none       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none
                           &none      &none      &none    &mkp RCLK   &mkp LCLK       &mkp MCLK
            >;
        };

        symbol {
            bindings = <
&trans  &kp LS(LEFT_BRACKET)  &kp LS(N7)  &kp LS(N8)     &kp LS(N9)  &kp LS(RIGHT_BRACKET)    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp LS(SEMI)          &kp LS(N4)  &kp LS(N5)     &kp LS(N5)  &kp LS(EQUAL)            &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp LS(GRAVE)         &kp LS(N1)  &kp LS(N2)     &kp LS(N3)  &kp LS(BACKSLASH)        &trans  &trans     &trans     &trans    &trans    &trans
                                          &kp LS(MINUS)  &kp LS(N9)  &kp LS(N0)               &trans  &trans     &trans
            >;
        };
    };
};
